1. Tell me about yourself:

Academically I graduated in Comp Sc and now I have completed 6 yrs of exp

Currently I am working as SE3 with HPE under it's Compute Organization and I am part of the ecosystem of server management which delivers FW update to HPE's server.


I have worked on several projects and tools and would like to prmiarily focus on SPP and Olive.


SPP is comprehensive systems software and firmware update solution for Proliant which is delivered as a single ISO image on regaular cadence. I had the complete responsibility of providing end to end development - which can be broken down into three major categories - 


1. Interact with HPE's internal Build and Release system for payload delivery and metadata.
2. Creation of data to be used for intelligence dependency and sequencing engine of HPE's deployment tool based on inventory of target server.
3. Develop modules to bring up the HPE's Boot enviroment and configure the deployment tool.





Olive is a software as a service(SaaS) solution, where the firmware update services are hosted in Amazon Web services(aws). Olive services are available to the user over internet and users can access the services using positano, oneview and iLO. Olive has two services data consumer service (DCS) and public RESTful services (PRS) to enable the firmware update through cloud. DCS receives bundle manifest and component location from another service ‘Download Manger’ and stores bundles details and component information into Elastic search. PRS provides a set of REST APIs to get the information from elasticsearch.

Olive provides a set of APIs api/v1/bundles, /api/v1/compliance/calculate, /api/v1/bundles/details, /api/v1/installset/calculate to positano and oneview to perform the firmware update. /api/v1/bundles API is a GET method that provides list of bundles available in Olive database. This API helps the clients to show the information about released bundles, release notes, enhancements and important fixes available. Compliance API, /api/v1/compliance/calculate is a POST method that takes server inventory and bundle version as input and helps the clients to determine the baseline at which the server was. Using compliance API clients would determine how many upgrades are required to come to particular baseline that user has selected during the update. Bundles details API, /api/v1/bundles/details is a GET method that provides meta information about the components that are part of a bundle. Install set API, /api/v1/installset/calculate is POST method that takes server inventory and component meta information from bundle details API and calculates a set of applicable components for the server. This installset can be invoked directly on iLO to perform firmware update.






Olive Cloud Development: Build new capabilities Design, develop and maintain SMTA movement before Olive GA.Post production or partner issue of Olive Catastrophic – 4 hrs, Critical – 48 hours and Serious – 5 days.Ensure code coverage of 70% and above by adopting robust unit test cases.Ensure zero regression due to backwards combability with new SMTA movement release.Ensure Zero MAT failure.  Enhance olive solution to make it more resilient and secure Development of new features by keeping security as an important aspect.Deliver secure and independent microservices with 0 regression and more than 70% of code coverageDevelopment of features with 0 critical errors and 0 regression errors








2. Currently I am a Cloud Native Developer and aspire to become Cloud Architect. So I need to have understanding of various cloud providers, public/pvt cloud/hybrid, migrations, understan app dependencies, target architecture, devops, security, 




____________


The problem statement that I am working on can be interpreted using a simple analogy of yum / apt-get.  

Let's say you have the RedHat ISO of RHEL9 - it will be 1. Bootable 2. It will have an installer 3. It will have the repo 4. It will have metadata about the repo so that the yum knows what all packages are availabe to install and what would be the dependency and sequence. 


